{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Tounkara/Downloads/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\",\n    _this = this;\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\n\nvar MeetupDetails = function MeetupDetails(props) {\n  var title, image, address, description;\n\n  var getMeetingDetails = function getMeetingDetails() {\n    if (props.meetupData) {\n      return props.meetupData;\n    }\n\n    return {};\n  };\n\n  if (props.meetupData) {} else {}\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/Users/Tounkara/Downloads/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","Fragment","Head","MeetupDetails","props","title","image","address","description","getMeetingDetails","meetupData"],"mappings":";;;;;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAGA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,MAAIC,KAAJ,EAAWC,KAAX,EAAkBC,OAAlB,EAA2BC,WAA3B;;AAEA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9B,QAAIL,KAAK,CAACM,UAAV,EAAsB;AACpB,aAAON,KAAK,CAACM,UAAb;AACD;;AACD,WAAO,EAAP;AAGD,GAPD;;AASA,MAAIN,KAAK,CAACM,UAAV,EAAsB,CAErB,CAFD,MAEO,CAEN;;AAED,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA,kBAAQN,KAAK,CAACM,UAAN,CAAiBL;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aADF,eAIE,QAAC,YAAD;AACE,MAAA,KAAK,EAAED,KAAK,CAACM,UAAN,CAAiBJ,KAD1B;AAEE,MAAA,KAAK,EAAEF,KAAK,CAACM,UAAN,CAAiBL,KAF1B;AAGE,MAAA,OAAO,EAAED,KAAK,CAACM,UAAN,CAAiBH,OAH5B;AAIE,MAAA,WAAW,EAAEH,KAAK,CAACM,UAAN,CAAiBF;AAJhC;AAAA;AAAA;AAAA;AAAA,aAJF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAaD,CA/BD;;KAAML,a;;AA6EN,eAAeA,aAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\nimport { MongoClient, ObjectId } from \"mongodb\";\n\nconst MeetupDetails = (props) => {\n  let title, image, address, description;\n\n  const getMeetingDetails = () => {\n    if (props.meetupData) {\n      return props.meetupData;\n    }\n    return {\n      \n    };\n  }\n\n  if (props.meetupData) {\n\n  } else {\n\n  }\n\n  return (\n    <Fragment>\n      <Head>\n        <title>{props.meetupData.title}</title>\n      </Head>\n      <MeetupDetail\n        image={props.meetupData.image}\n        title={props.meetupData.title}\n        address={props.meetupData.address}\n        description={props.meetupData.description}\n      />\n    </Fragment>\n  );\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://ibrahima:Tounkara22@lafiameets.up5v7.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const collection = db.collection(\"meetups\");\n\n  const meetups = await collection.find({}, { _id: 1 }).toArray();\n\n  return {\n    fallback: \"blocking\",\n    paths: meetups.map((m) => ({\n      params: {\n        meetupId: m._id.toString(),\n      },\n    })),\n  };\n}\n\nexport async function getStaticProps(context) {\n  const id = context.params.meetupId;\n  const client = await MongoClient.connect(\n    \"mongodb+srv://ibrahima:Tounkara22@lafiameets.up5v7.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const collection = db.collection(\"meetups\");\n\n  const meetup = await collection.findOne({ _id: ObjectId(id) });\n\n  if (!meetup) return { props: { meetupData: null } };\n\n  return {\n    props: {\n      meetupData: {\n        id: meetup._id.toString(),\n        title: meetup.title,\n        description: meetup.description,\n        image: meetup.image,\n        address: meetup.address,\n      },\n    },\n  };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}