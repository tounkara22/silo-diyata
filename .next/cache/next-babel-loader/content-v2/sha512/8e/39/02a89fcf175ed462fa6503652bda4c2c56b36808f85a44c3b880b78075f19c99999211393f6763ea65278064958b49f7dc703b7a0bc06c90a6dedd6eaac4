{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Tounkara/Downloads/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\nimport { useRouter } from \"next/router\";\nimport { MongoClient, ObjectId } from \"mongodb\";\n\nconst MeetupDetails = props => {\n  const router = useRouter();\n\n  if (!props.meetupData) {\n    router.push(\"/\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://ibrahima:Tounkara22@lafiameets.up5v7.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const collection = db.collection(\"meetups\");\n  const meetups = await collection.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: \"blocking\",\n    paths: meetups.map(m => ({\n      params: {\n        meetupId: m._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const id = context.params.meetupId;\n  if (!ObjectId.isValid(id)) return {\n    props: {\n      meetupData: null\n    }\n  };\n  const client = await MongoClient.connect(\"mongodb+srv://ibrahima:Tounkara22@lafiameets.up5v7.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const collection = db.collection(\"meetups\");\n  const meetup = await collection.findOne({\n    _id: ObjectId(id)\n  });\n  if (!meetup) return {\n    props: {\n      meetupData: null\n    }\n  };\n  return {\n    props: {\n      meetupData: {\n        id: meetup._id.toString(),\n        title: meetup.title,\n        description: meetup.description,\n        image: meetup.image,\n        address: meetup.address\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/Tounkara/Downloads/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","Fragment","Head","useRouter","MongoClient","ObjectId","MeetupDetails","props","router","meetupData","push","title","image","address","description","getStaticPaths","client","connect","db","collection","meetups","find","_id","toArray","fallback","paths","map","m","params","meetupId","toString","getStaticProps","context","id","isValid","meetup","findOne"],"mappings":"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","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\nimport { useRouter } from \"next/router\";\nimport { MongoClient, ObjectId } from \"mongodb\";\n\nconst MeetupDetails = (props) => {\n  const router = useRouter();\n\n  if (!props.meetupData) {\n    router.push(\"/\");\n  }\n\n  return (\n    <Fragment>\n      <Head>\n        <title>{props.meetupData.title}</title>\n      </Head>\n      <MeetupDetail\n        image={props.meetupData.image}\n        title={props.meetupData.title}\n        address={props.meetupData.address}\n        description={props.meetupData.description}\n      />\n    </Fragment>\n  );\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://ibrahima:Tounkara22@lafiameets.up5v7.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const collection = db.collection(\"meetups\");\n\n  const meetups = await collection.find({}, { _id: 1 }).toArray();\n\n  return {\n    fallback: \"blocking\",\n    paths: meetups.map((m) => ({\n      params: {\n        meetupId: m._id.toString(),\n      },\n    })),\n  };\n}\n\nexport async function getStaticProps(context) {\n  const id = context.params.meetupId;\n  if (!ObjectId.isValid(id)) return { props: { meetupData: null } };\n\n  const client = await MongoClient.connect(\n    \"mongodb+srv://ibrahima:Tounkara22@lafiameets.up5v7.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const collection = db.collection(\"meetups\");\n\n  const meetup = await collection.findOne({ _id: ObjectId(id) });\n\n  if (!meetup) return { props: { meetupData: null } };\n\n  return {\n    props: {\n      meetupData: {\n        id: meetup._id.toString(),\n        title: meetup.title,\n        description: meetup.description,\n        image: meetup.image,\n        address: meetup.address,\n      },\n    },\n  };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}