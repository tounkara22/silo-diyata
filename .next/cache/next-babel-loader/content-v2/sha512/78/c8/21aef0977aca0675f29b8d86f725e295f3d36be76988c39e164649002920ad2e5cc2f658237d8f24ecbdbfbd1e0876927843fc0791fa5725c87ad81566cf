{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Tounkara/Downloads/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    id: \"meaningful id\",\n    description: \"Meaningful desription\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://ibrahima:Tounkara22@lafiameets.up5v7.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const collection = db.collection(\"meetups\");\n  const meetups = await collection.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: true,\n    paths: meetups.map(m => ({\n      params: {\n        meetupId: m._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const id = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://ibrahima:Tounkara22@lafiameets.up5v7.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const collection = db.collection(\"meetups\");\n  const meetup = await collection.findOne({\n    _id: ObjectId(id)\n  });\n  return {\n    props: {\n      meetupData: meetup\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/Tounkara/Downloads/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","ObjectId","MeetupDetails","props","meetupData","image","title","address","getStaticPaths","client","connect","db","collection","meetups","find","_id","toArray","fallback","paths","map","m","params","meetupId","toString","getStaticProps","context","id","meetup","findOne"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,IAAA,EAAE,EAAE,eAJN;AAKE,IAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAVD;;AAYA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CACnB,oGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,UAAU,GAAGD,EAAE,CAACC,UAAH,CAAc,SAAd,CAAnB;AAEA,QAAMC,OAAO,GAAG,MAAMD,UAAU,CAACE,IAAX,CAAgB,EAAhB,EAAoB;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAApB,EAAgCC,OAAhC,EAAtB;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,IADL;AAELC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAaC,CAAD,KAAQ;AACzBC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAEF,CAAC,CAACL,GAAF,CAAMQ,QAAN;AADJ;AADiB,KAAR,CAAZ;AAFF,GAAP;AAQD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMC,EAAE,GAAGD,OAAO,CAACJ,MAAR,CAAeC,QAA1B;AACA,QAAMb,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CACnB,oGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,UAAU,GAAGD,EAAE,CAACC,UAAH,CAAc,SAAd,CAAnB;AAEA,QAAMe,MAAM,GAAG,MAAMf,UAAU,CAACgB,OAAX,CAAmB;AAACb,IAAAA,GAAG,EAAEd,QAAQ,CAACyB,EAAD;AAAd,GAAnB,CAArB;AAGA,SAAO;AACLvB,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAEuB;AADP;AADF,GAAP;AAKD;AAED,eAAezB,aAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\n\nconst MeetupDetails = (props) => {\n  return (\n    <MeetupDetail\n      image={props.meetupData.image}\n      title={props.meetupData.title}\n      address={props.meetupData.address}\n      id={\"meaningful id\"}\n      description=\"Meaningful desription\"\n    />\n  );\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://ibrahima:Tounkara22@lafiameets.up5v7.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const collection = db.collection(\"meetups\");\n\n  const meetups = await collection.find({}, { _id: 1 }).toArray();\n\n  return {\n    fallback: true,\n    paths: meetups.map((m) => ({\n      params: {\n        meetupId: m._id.toString(),\n      },\n    })),\n  };\n}\n\nexport async function getStaticProps(context) {\n  const id = context.params.meetupId;\n  const client = await MongoClient.connect(\n    \"mongodb+srv://ibrahima:Tounkara22@lafiameets.up5v7.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const collection = db.collection(\"meetups\");\n\n  const meetup = await collection.findOne({_id: ObjectId(id)});\n\n\n  return {\n    props: {\n      meetupData: meetup\n    },\n  };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}